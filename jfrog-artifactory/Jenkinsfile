pipeline {
    agent { label 'dind-3' }
    environment {
        SERVER_URL = 'gamezssl.jfrog.io'
    }
    tools {
        gradle 'gradle-jenkins'
    }
    stages {
        stage('Clonación del Repositorio') {
            steps {
                git branch: 'main', url: 'https://github.com/gamezssl/gs-gradle.git'
            }
        }

        stage('Configuración Artifactory') {
            steps {
                script {
                    def server = Artifactory.server(SERVER_URL)
                    def rtGradle = Artifactory.newGradleBuild()
                    rtGradle.tool = 'gradle-jenkins'
                    rtGradle.deployer repo: 'default-gradle-dev-local', server: server
                    rtGradle.resolver repo: 'default-gradle-dev', server: server
                }
            }
        }

        stage('Captura de Variables de Entorno') {
            steps {
                script {
                    def buildInfo = Artifactory.newBuildInfo()
                    buildInfo.env.capture = true
                    buildInfo.env.filter.addInclude("*")
                }
            }
        }

        stage('Configuración de Gradle') {
            steps {
                script {
                    def rtGradle = Artifactory.newGradleBuild()
                    rtGradle.usesPlugin = true
                }
            }
        }

        stage('Ejecución de Gradle') {
            steps {
                script {
                    def buildInfo = Artifactory.newBuildInfo()
                    def rtGradle = Artifactory.newGradleBuild()
                    rtGradle.run rootDir: "artifactory/", tasks: 'clean artifactoryPublish', buildInfo: buildInfo
                }
            }
        }

        stage('Publicación del BuildInfo') {
            steps {
                script {
                    def server = Artifactory.server(SERVER_URL)
                    def buildInfo = Artifactory.newBuildInfo()
                    server.publishBuildInfo(buildInfo)
                }
            }
        }
    }
}